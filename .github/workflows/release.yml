name: 📦 Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    name: 📦 Create Release
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: 🐍 Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: 📦 Build package
      run: |
        python -m pip install --upgrade pip build
        python -m build

    - name: 🐳 Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: 🔑 Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: 🏷️ Extract version
      id: version
      run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

    - name: 🔨 Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/open-webui:${{ steps.version.outputs.VERSION }}
          ${{ secrets.DOCKER_USERNAME }}/open-webui:latest

    - name: 📝 Generate changelog
      id: changelog
      run: |
        # Generar changelog desde el último tag
        PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD~1 2>/dev/null || echo "")
        if [ -n "$PREVIOUS_TAG" ]; then
          CHANGELOG=$(git log --pretty=format:"- %s" $PREVIOUS_TAG..HEAD)
        else
          CHANGELOG=$(git log --pretty=format:"- %s")
        fi
        echo "CHANGELOG<<EOF" >> $GITHUB_OUTPUT
        echo "$CHANGELOG" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

    - name: 📦 Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Open WebUI ${{ steps.version.outputs.VERSION }}
        body: |
          ## 🎉 Open WebUI ${{ steps.version.outputs.VERSION }}
          
          ### 📋 Cambios en esta versión:
          ${{ steps.changelog.outputs.CHANGELOG }}
          
          ### 🚀 Instalación
          
          #### Docker
          ```bash
          docker run -d -p 8080:8080 ${{ secrets.DOCKER_USERNAME }}/open-webui:${{ steps.version.outputs.VERSION }}
          ```
          
          #### Instalación manual
          ```bash
          git clone https://github.com/ANDYELPINGON/open-web-ui-.git
          cd open-web-ui-
          git checkout ${{ steps.version.outputs.VERSION }}
          ./install.sh
          ```
          
          ### 📚 Documentación
          - [📖 README](https://github.com/ANDYELPINGON/open-web-ui-/blob/main/README.md)
          - [🔧 Guía de Instalación](https://github.com/ANDYELPINGON/open-web-ui-/blob/main/docs/installation.md)
          - [⚙️ Configuración](https://github.com/ANDYELPINGON/open-web-ui-/blob/main/docs/configuration.md)
          
          ### 🐳 Imágenes Docker
          - `${{ secrets.DOCKER_USERNAME }}/open-webui:${{ steps.version.outputs.VERSION }}`
          - `${{ secrets.DOCKER_USERNAME }}/open-webui:latest`
        draft: false
        prerelease: false

    - name: 📤 Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-artifacts
        path: dist/